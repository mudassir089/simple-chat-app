{"version":3,"sources":["Message.js","firebase.js","messanger.jpg","App.js","index.js"],"names":["Message","username","message","isUser","className","Card","CardContent","Typography","variant","component","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","a","prompt","src","img","alt","width","style","color","FormControl","InputLabel","htmlFor","Input","value","onChange","e","target","IconButton","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAoBeA,MAhBf,YAAyC,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QACrBC,EAASF,IAAaC,EAAQD,SACpC,OACE,qBAAKG,UAAS,kBAAaD,GAAU,gBAArC,SACE,cAACE,EAAA,EAAD,CAAMD,UAAWD,EAAS,mBAAqB,oBAA/C,SACE,cAACG,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,WACIN,GAAD,UAAcD,EAAQD,UAAY,KAAlC,MACAC,EAAQA,kB,QCGNQ,EAbKC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,+CACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGMC,YCbR,MAA0B,sCC2E1BC,MAlEf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEmBF,mBAAS,CAAC,KAF7B,mBAENG,EAFM,KAEIC,EAFJ,OAGmBJ,mBAAS,IAH5B,mBAGNtB,EAHM,KAGI2B,EAHJ,KAmCb,OA9BAC,qBAAU,WACRnB,EAAGoB,WAAW,YACXC,QAAQ,YAAa,OACrBC,YAAW,SAACC,GACXN,EAAYM,EAASC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,gBAE9C,IAEHR,qBAAU,WACR,IAAIS,EAAIC,OAAO,gBAEbX,EADEU,GAGU,kBAEb,IAgBD,sBAAKlC,UAAU,MAAf,UACE,qBAAKoC,IAAKC,EAAKC,IAAI,MAAMC,MAAM,UAC/B,qBAAIC,MAAO,CAAEC,MAAO,SAApB,qBAAwC5C,EAAxC,oBACA,sBAAMG,UAAU,WAAhB,SACE,eAAC0C,EAAA,EAAD,CAAa1C,UAAU,cAAvB,UACE,cAAC2C,EAAA,EAAD,CAAYC,QAAQ,WAApB,8BACA,cAACC,EAAA,EAAD,CACE7C,UAAU,YACV8C,MAAO1B,EACP2B,SAAU,SAACC,GAAD,OAAO3B,EAAS2B,EAAEC,OAAOH,UAErC,cAACI,EAAA,EAAD,CACElD,UAAU,aACVmD,UAAW/B,EACXqB,MAAM,UACNW,KAAK,SACLC,QA9BU,SAACL,GACnBA,EAAEM,iBAEFhD,EAAGoB,WAAW,YAAY6B,IAAI,CAC5BzD,QAASsB,EACTvB,SAAUA,EACV2D,UAAWjD,IAASU,UAAUwC,WAAWC,oBAG3CnC,EAAY,GAAD,mBAAKD,GAAL,CAAe,CAAEzB,SAAUA,EAAU8D,KAAMvC,MACtDC,EAAS,KAeH,SAOE,cAAC,IAAD,WAKLC,EAASS,KAAI,SAACjC,GAAD,OACZ,cAAC,EAAD,CAASD,SAAUA,EAAUC,QAASA,WCjE9C8D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.404ed47e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, Typography, CardContent } from \"@material-ui/core\";\r\nimport \"./Message.css\";\r\n\r\nfunction Message({ username, message }) {\r\n  const isUser = username === message.username;\r\n  return (\r\n    <div className={`message ${isUser && \"message_user\"}`}>\r\n      <Card className={isUser ? \"message_userCard\" : \"message_guestCard\"}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" component=\"h5\">\r\n            {!isUser && `${message.username || \"..\"}: `}\r\n            {message.message}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCqxTtGM34hc7pBy7WkyEGfmiUmA7I5BRA\",\r\n  authDomain: \"simple-chat-app-f290f.firebaseapp.com\",\r\n  databaseURL: \"https://simple-chat-app-f290f.firebaseio.com\",\r\n  projectId: \"simple-chat-app-f290f\",\r\n  storageBucket: \"simple-chat-app-f290f.appspot.com\",\r\n  messagingSenderId: \"382576830998\",\r\n  appId: \"1:382576830998:web:e8568cd8fa5e886b9d2337\",\r\n  measurementId: \"G-J07DV287GF\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;\r\n","export default __webpack_public_path__ + \"static/media/messanger.e1c1dd09.jpg\";","import React, { useState, useEffect } from \"react\";\nimport { Input, FormControl, InputLabel, IconButton } from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport \"./App.css\";\nimport Message from \"./Message\";\nimport firebase from \"firebase\";\nimport db from \"./firebase\";\nimport img from \"./messanger.jpg\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([{}]);\n  const [username, setUsername] = useState(\"\");\n\n  useEffect(() => {\n    db.collection(\"messages\")\n      .orderBy(\"timestamp\", \"asc\")\n      .onSnapshot((snapshot) => {\n        setMessages(snapshot.docs.map((doc) => doc.data()));\n      });\n  }, []);\n\n  useEffect(() => {\n    var a = prompt(\"Set Username\");\n    if (a) {\n      setUsername(a);\n    } else {\n      setUsername(\"Unknown User\");\n    }\n  }, []);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    db.collection(\"messages\").add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n\n    setMessages([...messages, { username: username, text: input }]);\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <img src={img} alt=\"img\" width=\"200px\" />\n      <h2 style={{ color: \"green\" }}>Welcome {username} ðŸš€ </h2>\n      <form className=\"app_form\">\n        <FormControl className=\"input_field\">\n          <InputLabel htmlFor=\"my-input\">Type Something..</InputLabel>\n          <Input\n            className=\"app_input\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n          />\n          <IconButton\n            className=\"icon_input\"\n            disabled={!input}\n            color=\"primary\"\n            type=\"submit\"\n            onClick={sendMessage}\n          >\n            <SendIcon />\n          </IconButton>\n        </FormControl>\n      </form>\n\n      {messages.map((message) => (\n        <Message username={username} message={message} />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}